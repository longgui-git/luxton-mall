<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.moka.mapper.sijiao.StStudentMapper" >
  <resultMap id="BaseResultMap" type="com.moka.pojo.sijiao.StStudent" >
    <id column="stu_id" property="stuId" jdbcType="INTEGER" />
    <result column="join_time" property="joinTime" jdbcType="TIMESTAMP" />
    <result column="stu_name" property="stuName" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="height" property="height" jdbcType="INTEGER" />
    <result column="weight" property="weight" jdbcType="REAL" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="time_difference" property="timeDifference" jdbcType="INTEGER" />
    <result column="occupation" property="occupation" jdbcType="VARCHAR" />
    <result column="stu_sex" property="stuSex" jdbcType="INTEGER" />
    <result column="stu_education" property="stuEducation" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    stu_id, join_time, stu_name, age, height, weight, city, time_difference, occupation, 
    stu_sex, stu_education, user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.moka.pojo.sijiao.StStudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from st_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from st_student
    where stu_id = #{stuId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from st_student
    where stu_id = #{stuId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.moka.pojo.sijiao.StStudentExample" >
    delete from st_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.moka.pojo.sijiao.StStudent" >
    insert into st_student (stu_id, join_time, stu_name, 
      age, height, weight, city, 
      time_difference, occupation, stu_sex, 
      stu_education, user_id)
    values (#{stuId,jdbcType=INTEGER}, #{joinTime,jdbcType=TIMESTAMP}, #{stuName,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{height,jdbcType=INTEGER}, #{weight,jdbcType=REAL}, #{city,jdbcType=VARCHAR}, 
      #{timeDifference,jdbcType=INTEGER}, #{occupation,jdbcType=VARCHAR}, #{stuSex,jdbcType=INTEGER}, 
      #{stuEducation,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.moka.pojo.sijiao.StStudent" >
    insert into st_student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stuId != null" >
        stu_id,
      </if>
      <if test="joinTime != null" >
        join_time,
      </if>
      <if test="stuName != null" >
        stu_name,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="height != null" >
        height,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="timeDifference != null" >
        time_difference,
      </if>
      <if test="occupation != null" >
        occupation,
      </if>
      <if test="stuSex != null" >
        stu_sex,
      </if>
      <if test="stuEducation != null" >
        stu_education,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stuId != null" >
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="joinTime != null" >
        #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stuName != null" >
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="height != null" >
        #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=REAL},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="timeDifference != null" >
        #{timeDifference,jdbcType=INTEGER},
      </if>
      <if test="occupation != null" >
        #{occupation,jdbcType=VARCHAR},
      </if>
      <if test="stuSex != null" >
        #{stuSex,jdbcType=INTEGER},
      </if>
      <if test="stuEducation != null" >
        #{stuEducation,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.moka.pojo.sijiao.StStudentExample" resultType="java.lang.Integer" >
    select count(*) from st_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update st_student
    <set >
      <if test="record.stuId != null" >
        stu_id = #{record.stuId,jdbcType=INTEGER},
      </if>
      <if test="record.joinTime != null" >
        join_time = #{record.joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stuName != null" >
        stu_name = #{record.stuName,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.height != null" >
        height = #{record.height,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null" >
        weight = #{record.weight,jdbcType=REAL},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.timeDifference != null" >
        time_difference = #{record.timeDifference,jdbcType=INTEGER},
      </if>
      <if test="record.occupation != null" >
        occupation = #{record.occupation,jdbcType=VARCHAR},
      </if>
      <if test="record.stuSex != null" >
        stu_sex = #{record.stuSex,jdbcType=INTEGER},
      </if>
      <if test="record.stuEducation != null" >
        stu_education = #{record.stuEducation,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update st_student
    set stu_id = #{record.stuId,jdbcType=INTEGER},
      join_time = #{record.joinTime,jdbcType=TIMESTAMP},
      stu_name = #{record.stuName,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      height = #{record.height,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=REAL},
      city = #{record.city,jdbcType=VARCHAR},
      time_difference = #{record.timeDifference,jdbcType=INTEGER},
      occupation = #{record.occupation,jdbcType=VARCHAR},
      stu_sex = #{record.stuSex,jdbcType=INTEGER},
      stu_education = #{record.stuEducation,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.moka.pojo.sijiao.StStudent" >
    update st_student
    <set >
      <if test="joinTime != null" >
        join_time = #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stuName != null" >
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="height != null" >
        height = #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=REAL},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="timeDifference != null" >
        time_difference = #{timeDifference,jdbcType=INTEGER},
      </if>
      <if test="occupation != null" >
        occupation = #{occupation,jdbcType=VARCHAR},
      </if>
      <if test="stuSex != null" >
        stu_sex = #{stuSex,jdbcType=INTEGER},
      </if>
      <if test="stuEducation != null" >
        stu_education = #{stuEducation,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
    </set>
    where stu_id = #{stuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.moka.pojo.sijiao.StStudent" >
    update st_student
    set join_time = #{joinTime,jdbcType=TIMESTAMP},
      stu_name = #{stuName,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      height = #{height,jdbcType=INTEGER},
      weight = #{weight,jdbcType=REAL},
      city = #{city,jdbcType=VARCHAR},
      time_difference = #{timeDifference,jdbcType=INTEGER},
      occupation = #{occupation,jdbcType=VARCHAR},
      stu_sex = #{stuSex,jdbcType=INTEGER},
      stu_education = #{stuEducation,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT}
    where stu_id = #{stuId,jdbcType=INTEGER}
  </update>
</mapper>